#!/bin/bash
#
# Email Processor Launcher Script
# ================================
# 
# Smart launcher for the Okusi Associates Email Auto-Reply System.
# This script automatically activates the Python virtual environment
# and executes the main email processor with all passed arguments.
#
# Features:
#   - Automatic virtual environment activation
#   - Argument passthrough to Python script
#   - Proper error handling with strict mode
#   - Path resolution for reliable execution
#
# Usage:
#   ./email_processor [options]
#   ./email_processor --full-scan --verbose
#   ./email_processor --dry-run --file '/path/to/email'
#
# Security:
#   - Should be run as vmail user for email file access
#   - No privilege escalation required
#   - Uses strict bash mode for error detection
#
# Environment:
#   - Requires .venv directory with Python dependencies
#   - Python script must exist alongside this launcher
#   - Virtual environment must contain PyYAML, anthropic, openai packages
#

#shellcheck disable=SC2155,SC1091
set -Eeuo pipefail
# Resolve script paths for help execution
declare PRG0=$(readlink -fn -- "$0")
declare PRGDIR=$(dirname "$PRG0")
declare PRG=$(basename "$PRG0")

# Handle help requests directly without user switching to avoid duplicate output
for arg in "$@"; do
  if [[ "$arg" == "--help" || "$arg" == "-h" ]]; then
    # Activate virtual environment and execute help directly
    source "$PRGDIR"/.venv/bin/activate
    exec "$PRGDIR"/"$PRG".py "$@"
  fi
done

[[ "$(whoami)" == vmail ]] || { sudo -u vmail "$0" "$@"; exit; }

# Resolve script paths for reliable execution
#declare PRG0=$(readlink -fn -- "$0")
#declare PRGDIR=$(dirname "$PRG0")
#declare PRG=$(basename "$PRG0")

# Activate Python virtual environment
# This ensures all required dependencies are available
source "$PRGDIR"/.venv/bin/activate

# Execute the main Python processor with all arguments
# Arguments are passed through unchanged to maintain CLI compatibility
"$PRGDIR"/"$PRG".py "$@"

#fin
